import{b as s}from"./api-B9d806Z_.js";const c=async()=>{try{return(await s.get("/casos")).data}catch(r){throw console.error("Error al obtener casos:",r),r}},n=async r=>{try{return(await s.post("/casos",r)).data}catch(a){throw console.error("Error al crear caso:",a),a}},l=async r=>{try{return(await s.get(`/casos/${r}`)).data}catch(a){throw console.error(`Error al obtener caso ${r}:`,a),a}},p=async(r,a)=>{try{return(await s.put(`/casos/${r}`,a)).data}catch(o){throw console.error(`Error al actualizar caso ${r}:`,o),o}},d=async r=>{try{await s.delete(`/casos/${r}`)}catch(a){throw console.error(`Error al eliminar el caso ID ${r}:`,a),a}},u=async(r,a)=>{try{const o={Estado:a};return(await s.put(`/casos/${r}/estado`,o)).data}catch(o){throw console.error(`Error al actualizar el estado del caso ID ${r} a ${a}:`,o),o}},y=async(r,a)=>{try{return(await s.put(`/saved_searches/${r}`,a)).data}catch(o){throw console.error(`Error al actualizar b√∫squeda guardada ${r}:`,o),o}};export{p as a,y as b,n as c,d,l as e,c as g,u};
